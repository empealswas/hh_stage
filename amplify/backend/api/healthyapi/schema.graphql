<<<<<<< Updated upstream:amplify/backend/api/healthyapi/schema.graphql
type File @model @auth (rules: [{allow: private}]) @key(name: "byLesson", fields: ["lessonID"]) {
  id: ID!
  key: String
  region: String
  bucket: String
  lessonID: ID
}

=======
type File
@model
@key(name: "byLesson", fields: ["lessonID"])
{
    id: ID!
    key: String
    region: String
    bucket: String
    lessonID: ID
}

type Section @model
@key(name: "bySection", fields:["parentID"])
@key(name: "byFile", fields:["imagePreviewID"])
{
    id: ID!
    name: String
    parentID: ID
    ParentSection: Section @connection(fields: ["parentID"])
    Lessons: [Lesson] @connection(keyName: "bySection", fields: ["id"])
    imagePreviewID: ID
    ImagePreview: File @connection(fields: ["imagePreviewID"])
}

type Lesson @model
@key(name: "bySection", fields: ["sectionID"])
{
    id: ID!
    title: String
    description: String
    sectionID: ID
    Section: Section @connection(fields: ["sectionID"])
    LessonsRecords: [PELessonRecord] @connection(keyName: "byLesson", fields: ["id"])
    terms: [TermLesson] @connection(keyName: "byLesson", fields: ["id"])
    Attendances: [Attendance] @connection(keyName: "byLesson", fields: ["id"])
    Files: [File] @connection(keyName: "byLesson", fields: ["id"])
    LessonTeacher: [LessonTeacher] @connection(keyName: "byLesson", fields: ["id"])
}

type PELessonRecord @model
@key(name: "byTeacher", fields: ["teacherID"])
@key(name: "byLesson", fields: ["lessonID"])
@auth(rules: [{ allow: public, provider: iam },
    { allow: public, provider: apiKey },{allow: private}])
{
    id: ID!
    teacherID: ID
    Teacher: Teacher @connection(fields:["teacherID"])
    Attendances: [Attendance] @connection(keyName: "byPELessonRecord", fields: ["id"])
    date: AWSDate
    deliveredBy: String
    duration: Int
    activity: String
    rating: Int
    notes: String
    classroomID: ID
    Classroom: Classroom @connection(fields:["classroomID"])
    lessonID: ID
    Lesson: Lesson @connection(fields: ["lessonID"])
}
>>>>>>> Stashed changes:amplify/backend/api/HealthyHabitsV2GraphQlApi/schema.graphql

type SchoolHouse @model
{
    id: ID!
    name: String
    Pupils: [Pupil] @connection(keyName: "bySchoolHouse", fields: ["id"])
}
<<<<<<< Updated upstream:amplify/backend/api/healthyapi/schema.graphql

=======
type ClassroomLesson @model
@key(name: "byClassroom", fields: ["classroomID"])
@key(name: "byLesson", fields: ["lessonID"]){
    id: ID!
    classroomID: ID
    lessonID: ID
    Classroom: Classroom @connection(fields: ["classroomID"])
    Lesson: Lesson @connection(fields: ["lessonID"])
    completed: Boolean
}
>>>>>>> Stashed changes:amplify/backend/api/HealthyHabitsV2GraphQlApi/schema.graphql
type Classroom @model
@auth(rules: [{allow: private}])
@key(name: "bySchool", fields: ["schoolID"])
@key(name: "byCurriculum", fields: ["yearGroupID"])
{
    id: ID!
    name: String
    teachers: [TeacherClassroom] @connection(keyName: "byClassroom", fields: ["id"])
    pupils: [PupilClassroom] @connection(keyName: "byClassroom", fields: ["id"])
    schoolID: ID
    school: School @connection(fields: ["schoolID"])
    yearGroupID: ID
    yearGroup: Curriculum @connection(fields: ["yearGroupID"])
}

type TeacherClassroom @model(queries: null) @key(name: "byTeacher", fields: ["teacherID", "classroomID"]) @key(name: "byClassroom", fields: ["classroomID", "teacherID"]) {
    id: ID!
    teacherID: ID!
    classroomID: ID!
    teacher: Teacher! @connection(fields: ["teacherID"])
    classroom: Classroom! @connection(fields: ["classroomID"])
}
type PupilClassroom @model(queries: null) @key(name: "byPupil", fields: ["pupilID", "classroomID"]) @key(name: "byClassroom", fields: ["classroomID", "pupilID"]) {
    id: ID!
    pupilID: ID!
    classroomID: ID!
    pupil: Pupil! @connection(fields: ["pupilID"])
    classroom: Classroom! @connection(fields: ["classroomID"])
}

<<<<<<< Updated upstream:amplify/backend/api/healthyapi/schema.graphql
type School @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String
  country: String
  region: String
  principal: String
  Teachers: [Teacher] @connection(keyName: "bySchool", fields: ["id"])
  Pupils: [Pupil] @connection(keyName: "bySchool", fields: ["id"])
  classrooms: [Classroom] @connection(keyName: "bySchool", fields: ["id"])
=======
type School @model {
    id: ID!
    name: String
    country: String
    region: String
    principal: String

    Teachers: [Teacher] @connection(keyName: "bySchool", fields: ["id"])
    Principals: [Principal] @connection(keyName: "bySchool", fields: ["id"])
    Pupils: [Pupil] @connection(keyName: "bySchool", fields: ["id"])
    classrooms: [Classroom] @connection(keyName: "bySchool", fields: ["id"])
>>>>>>> Stashed changes:amplify/backend/api/HealthyHabitsV2GraphQlApi/schema.graphql
}

type Organization @model
@auth(rules: [{ allow: public, provider: iam },
    { allow: public, provider: apiKey },{allow: private}])
{
    id: ID!
    name: String
    Principals: [Principal] @connection(keyName: "byOrganization", fields: ["id"])
    type: String
}


type Attendance @model
@auth(rules: [{allow: private}])
@key(name: "byPupil", fields: ["pupilID"])
<<<<<<< Updated upstream:amplify/backend/api/healthyapi/schema.graphql
@key(name: "byLesson", fields: ["lessonID"]) {
  id: ID!
  present: Boolean
  wasRewarded: Boolean
  pupilID: ID
  lessonID: ID
  Pupil: Pupil @connection(fields: ["pupilID"])
  Lesson: Lesson @connection(fields: ["lessonID"])
=======
@key(name: "byLesson", fields: ["lessonID"])
@key(name: "byPELessonRecord", fields: ["lessonRecordID"]){
    id: ID!
    present: Boolean
    wasRewarded: Boolean
    pupilID: ID
    lessonID: ID
    Pupil: Pupil @connection(fields: ["pupilID"])
    Lesson: Lesson @connection(fields: ["lessonID"])
    lessonRecord: PELessonRecord @connection(fields: ["lessonRecordID"])
    lessonRecordID: ID
>>>>>>> Stashed changes:amplify/backend/api/HealthyHabitsV2GraphQlApi/schema.graphql
}

type LessonTeacher @model
@key(name: "byTeacher", fields: ["teacherID"])
@key(name: "byLesson", fields: ["lessonID"]){
    id: ID!
    teacherID: ID
    lessonID: ID
    Teacher: Teacher @connection(fields: ["teacherID"])
    Lesson: Lesson @connection(fields: ["lessonID"])
    score: Int
}

type Lesson @model @auth(rules: [{allow: private}]) {
  id: ID!
  title: String
  description: String
  terms: [TermLesson] @connection(keyName: "byLesson", fields: ["id"])
  Attendances: [Attendance] @connection(keyName: "byLesson", fields: ["id"])
  Files: [File] @connection(keyName: "byLesson", fields: ["id"])
  LessonTeacher: [LessonTeacher] @connection(keyName: "byLesson", fields: ["id"])
}

<<<<<<< Updated upstream:amplify/backend/api/healthyapi/schema.graphql
type Term @model @auth(rules: [{allow: private}]) {
  id: ID!
  nam: String
  startDate: AWSDate
  finishDate: AWSDate
  subjects: [SubjectTerm] @connection(keyName: "byTerm", fields: ["id"])
  TermLessons: [TermLesson] @connection(keyName: "byTerm", fields: ["id"])
}

type Subject @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String
  SubjectTerms: [SubjectTerm] @connection(keyName: "bySubject", fields: ["id"])
  curriculums: [CurriculumSubject] @connection(keyName: "bySubject", fields: ["id"])
}

type Curriculum @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String
  subjects: [CurriculumSubject] @connection(keyName: "byCurriculum", fields: ["id"])
}

type Parent @model @auth(rules: [{allow: private}]) {
  id: ID!
  firstName: String
  lastName: String
  email: AWSEmail
}

type Teacher @model @auth(rules: [{allow: private}]) @key(name: "bySchool", fields: ["schoolID"]) {
  id: ID!
  firstName: String
  lastName: String
  email: AWSEmail
  schoolID: ID
  classrooms: [TeacherClassroom] @connection(keyName: "byTeacher", fields: ["id"])
  LessonTeacher: [LessonTeacher] @connection(keyName: "byTeacher", fields: ["id"])
=======

type Term @model  {
    id: ID!
    nam: String
    startDate: AWSDate
    finishDate: AWSDate
    subjects: [SubjectTerm] @connection(keyName: "byTerm", fields: ["id"])
    TermLessons: [TermLesson] @connection(keyName: "byTerm", fields: ["id"])
}

type Subject @model  {
    id: ID!
    name: String
    SubjectTerms: [SubjectTerm] @connection(keyName: "bySubject", fields: ["id"])
    curriculums: [CurriculumSubject] @connection(keyName: "bySubject", fields: ["id"])
}

type Curriculum @model  {
    id: ID!
    name: String
    subjects: [CurriculumSubject] @connection(keyName: "byCurriculum", fields: ["id"])
}

type Parent @model  {
    id: ID!
    firstName: String
    lastName: String
    email: AWSEmail
    children: [PupilParent] @connection(keyName: "byParent", fields: ["id"])

}

type PupilParent @model(queries: null)
@key(name: "byPupil", fields: ["pupilID", "parentID"])
@key(name: "byParent", fields: ["parentID", "pupilID"]) {
    id: ID!
    pupilID: ID!
    parentID: ID!
    Parent: Parent! @connection(fields: ["parentID"])
    Pupil: Pupil! @connection(fields: ["pupilID"])
}
type Principal @model
@key(name: "bySchool", fields: ["schoolID"])
@key(name: "byOrganization", fields: ["organizationID"])
{
    id: ID!
    firstName: String
    lastName: String
    email: AWSEmail
    schoolID: ID
    School: School @connection(fields: ["schoolID"])
    organizationID: ID
    Organization: Organization @connection(fields: ["organizationID"])
}

type Teacher @model  @key(name: "bySchool", fields: ["schoolID"]) {
    id: ID!
    firstName: String
    lastName: String
    email: AWSEmail
    schoolID: ID
    classrooms: [TeacherClassroom] @connection(keyName: "byTeacher", fields: ["id"])
    LessonTeacher: [LessonTeacher] @connection(keyName: "byTeacher", fields: ["id"])
    School: School @connection(fields: ["schoolID"])
>>>>>>> Stashed changes:amplify/backend/api/HealthyHabitsV2GraphQlApi/schema.graphql
}

type Pupil @model
@auth(rules: [{allow: private}])
@key(name: "bySchool", fields: ["schoolID"])
<<<<<<< Updated upstream:amplify/backend/api/healthyapi/schema.graphql
@key(name: "bySchoolHouse", fields:["schoolHouseID"]){
  id: ID!
  firstName: String
  lastName: String
  Attendances: [Attendance] @connection(keyName: "byPupil", fields: ["id"])
  classrooms: [PupilClassroom] @connection(keyName: "byPupil", fields: ["id"])
  schoolID: ID
  schoolHouseID: ID
  schoolHouse: SchoolHouse @connection(fields: ["schoolHouseID"])
  school: School @connection(fields: ["schoolID"])

}

type SubjectTerm @model(queries: null) @key(name: "bySubject", fields: ["subjectID", "termID"]) @key(name: "byTerm", fields: ["termID", "subjectID"]) @auth(rules: [{allow: private}, {allow: private}]) {
  id: ID!
  subjectID: ID!
  termID: ID!
  subject: Subject! @connection(fields: ["subjectID"])
  term: Term! @connection(fields: ["termID"])
}

type TermLesson @model(queries: null) @key(name: "byTerm", fields: ["termID", "lessonID"]) @key(name: "byLesson", fields: ["lessonID", "termID"]) @auth(rules: [{allow: private}, {allow: private}]) {
  id: ID!
  termID: ID!
  lessonID: ID!
  term: Term! @connection(fields: ["termID"])
  lesson: Lesson! @connection(fields: ["lessonID"])
}

type CurriculumSubject @model(queries: null) @key(name: "byCurriculum", fields: ["curriculumID", "subjectID"]) @key(name: "bySubject", fields: ["subjectID", "curriculumID"]) @auth(rules: [{allow: private}, {allow: private}]) {
  id: ID!
  curriculumID: ID!
  subjectID: ID!
  curriculum: Curriculum! @connection(fields: ["curriculumID"])
  subject: Subject! @connection(fields: ["subjectID"])
=======
@key(name: "bySchoolHouse", fields:["schoolHouseID"])
@auth(rules: [{ allow: public, provider: iam },
    { allow: public, provider: apiKey },{allow: private}])
{
    id: ID!
    firstName: String
    lastName: String
    Attendances: [Attendance] @connection(keyName: "byPupil", fields: ["id"])
    classrooms: [PupilClassroom] @connection(keyName: "byPupil", fields: ["id"])
    schoolID: ID
    schoolHouseID: ID
    schoolHouse: SchoolHouse @connection(fields: ["schoolHouseID"])
    school: School @connection(fields: ["schoolID"])
    parents: [PupilParent] @connection(keyName: "byPupil", fields: ["id"])
    Interventions: [Intervention] @connection(keyName: "byPupil", fields: ["id"])
}

type Intervention @model
@key(name: "byPupil", fields: ["pupilID"])
@auth(rules: [{ allow: public, provider: iam }, { allow: public, provider: apiKey },{allow: private}]) {
    id: ID!
    pupilID: ID!
    Pupil: Pupil @connection(fields: ["pupilID"])
    message: String
}


type SubjectTerm @model(queries: null) @key(name: "bySubject", fields: ["subjectID", "termID"]) @key(name: "byTerm", fields: ["termID", "subjectID"]) {
    id: ID!
    subjectID: ID!
    termID: ID!
    subject: Subject! @connection(fields: ["subjectID"])
    term: Term! @connection(fields: ["termID"])
}

type TermLesson @model(queries: null) @key(name: "byTerm", fields: ["termID", "lessonID"]) @key(name: "byLesson", fields: ["lessonID", "termID"])  {
    id: ID!
    termID: ID!
    lessonID: ID!
    term: Term! @connection(fields: ["termID"])
    lesson: Lesson! @connection(fields: ["lessonID"])
}

type CurriculumSubject @model(queries: null) @key(name: "byCurriculum", fields: ["curriculumID", "subjectID"]) @key(name: "bySubject", fields: ["subjectID", "curriculumID"])  {
    id: ID!
    curriculumID: ID!
    subjectID: ID!
    curriculum: Curriculum! @connection(fields: ["curriculumID"])
    subject: Subject! @connection(fields: ["subjectID"])
>>>>>>> Stashed changes:amplify/backend/api/HealthyHabitsV2GraphQlApi/schema.graphql
}
